# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build

on:
  workflow_dispatch:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  cpplint:
    name: cpplint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-cpplint
          path: ~/.cache/pip

      - name: Pyhton
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: cpplint
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade cpplint
          cpplint \
            --repository=. \
            --recursive \
            --filter=-whitespace/line_length,-whitespace/braces,-whitespace/comments,-runtime/indentation_namespace,-whitespace/indent,-readability/braces,-whitespace/newline,-readability/todo,-build/c++11 \
            src

  pio_envs:
    name: Get PlatformIO Envs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v4
        with:
          key: pip
          path: ~/.cache/pip
      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Get Envs
        id: envs
        run: |
          echo "pio_default_envs=$(pio project config --json-output | jq -cr '[ .[][0] | select(startswith("env:")) | .[4:] ]')" >> $GITHUB_OUTPUT
    outputs:
      pio_default_envs: ${{ steps.envs.outputs.pio_default_envs }}

  platformio:
    name: "pio:${{ matrix.env }}:${{ matrix.board }}"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          #- env: ci-arduino-2
          #  board: esp32dev
          #- env: ci-arduino-2
          #  board: esp32-s2-saola-1
          #- env: ci-arduino-2
          #  board: esp32-s3-devkitc-1
          #- env: ci-arduino-2
          #  board: esp32-c3-devkitc-02

          #- env: ci-arduino-3
          #  board: esp32dev
          #- env: ci-arduino-3
          #  board: esp32-s2-saola-1
          #- env: ci-arduino-3
          #  board: esp32-s3-devkitc-1
          #- env: ci-arduino-3
          #  board: esp32-c3-devkitc-02
          #- env: ci-arduino-3
          #  board: esp32-c6-devkitc-1

          - env: ci-arduino-3-latest
            board: esp32dev
          - env: ci-arduino-3-latest
            board: esp32-s2-saola-1
          - env: ci-arduino-3-latest
            board: esp32-s3-devkitc-1
          - env: ci-arduino-3-latest
            board: esp32-c3-devkitc-02
          - env: ci-arduino-3-latest
            board: esp32-c6-devkitc-1

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache PlatformIO
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}-pio
          path: |
            ~/.cache/pip
            ~/.platformio

      - name: Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
          pip install --upgrade cryptography

      #- run: PLATFORMIO_SRC_DIR=examples/TaskManager PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
      #- run: PLATFORMIO_SRC_DIR=examples/TaskManagerJson PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
      - run: PLATFORMIO_SRC_DIR=examples/AsyncTaskManager PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}
      #- run: PLATFORMIO_SRC_DIR=examples/Watchdog PIO_BOARD=${{ matrix.board }} pio run -e ${{ matrix.env }}

      - name: Upload firmware
        run: pio run -e ${{ matrix.env }} --target upload

      - name: Capture Serial Output
        env:
          SERIAL_PORT: /dev/ttyUSB0  # ggf. anpassen
        run: |
          timeout 30 pio device monitor \
            --port $SERIAL_PORT \
            --baud 115200 \
            --raw > serial.log

      - name: Upload Serial Log
        uses: actions/upload-artifact@v4
        with:
          name: serial-log-${{ matrix.board }}-${{ matrix.env }}
          path: serial.log
